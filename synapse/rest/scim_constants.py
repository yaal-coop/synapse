SCIM_SERVICE_PROVIDER_CONFIG = {
    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig"],
    "meta": {
        "location": "/ServiceProviderConfig",
        "resourceType": "ServiceProviderConfig",
    },
    "documentationUri": "https://element-hq.github.io/synapse/latest/admin_api/scim_api.html",
    "patch": {"supported": False},
    "bulk": {"supported": False, "maxOperations": 0, "maxPayloadSize": 0},
    "changePassword": {"supported": True},
    "filter": {"supported": False, "maxResults": 0},
    "sort": {"supported": False},
    "etag": {"supported": False},
    "authenticationSchemes": [
        {
            "name": "OAuth Bearer Token",
            "description": "Authentication scheme using the OAuth Bearer Token Standard",
            "specUri": "http://www.rfc-editor.org/info/rfc6750",
            "documentationUri": "https://element-hq.github.io/synapse/latest/openid.html",
            "type": "oauthbearertoken",
            "primary": True,  # TODO
        },
        {
            "name": "HTTP Basic",
            "description": "Authentication scheme using the HTTP Basic Standard",
            "specUri": "http://www.rfc-editor.org/info/rfc2617",
            "documentationUri": "https://element-hq.github.io/synapse/latest/modules/password_auth_provider_callbacks.html",
            "type": "httpbasic",
        },
    ],
}

SCHEMA_SERVICE_PROVIDER_CONFIG = {
    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:Schema"],
    "id": "urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig",
    "meta": {
        "resourceType": "Schema",
        "location": "/Schemas/urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig",
    },
    "name": "Service Provider Configuration",
    "description": """Schema for representing the service provider's configuration""",
    "attributes": [
        {
            "name": "documentationUri",
            "type": "reference",
            "referenceTypes": ["external"],
            "multiValued": False,
            "description": """An HTTP-addressable URL pointing to the service provider's human-consumable help documentation.""",
            "required": False,
            "caseExact": False,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none",
        },
        {
            "name": "patch",
            "type": "complex",
            "multiValued": False,
            "description": """A complex type that specifies PATCH configuration options.""",
            "required": True,
            "returned": "default",
            "mutability": "readOnly",
            "subAttributes": [
                {
                    "name": "supported",
                    "type": "boolean",
                    "multiValued": False,
                    "description": """A Boolean value specifying whether or not the operation is supported.""",
                    "required": True,
                    "mutability": "readOnly",
                    "returned": "default",
                }
            ],
        },
        {
            "name": "bulk",
            "type": "complex",
            "multiValued": False,
            "description": """A complex type that specifies bulk configuration options.""",
            "required": True,
            "returned": "default",
            "mutability": "readOnly",
            "subAttributes": [
                {
                    "name": "supported",
                    "type": "boolean",
                    "multiValued": False,
                    "description": """A Boolean value specifying whether or not the operation is supported.""",
                    "required": True,
                    "mutability": "readOnly",
                    "returned": "default",
                },
                {
                    "name": "maxOperations",
                    "type": "integer",
                    "multiValued": False,
                    "description": """An integer value specifying the maximum number of operations.""",
                    "required": True,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                },
                {
                    "name": "maxPayloadSize",
                    "type": "integer",
                    "multiValued": False,
                    "description": """An integer value specifying the maximum payload size in bytes.""",
                    "required": True,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                },
            ],
        },
        {
            "name": "filter",
            "type": "complex",
            "multiValued": False,
            "description": """A complex type that specifies FILTER options.""",
            "required": True,
            "returned": "default",
            "mutability": "readOnly",
            "subAttributes": [
                {
                    "name": "supported",
                    "type": "boolean",
                    "multiValued": False,
                    "description": """A Boolean value specifying whether or not the operation is supported.""",
                    "required": True,
                    "mutability": "readOnly",
                    "returned": "default",
                },
                {
                    "name": "maxResults",
                    "type": "integer",
                    "multiValued": False,
                    "description": """An integer value specifying the maximum number of resources returned in a response.""",
                    "required": True,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                },
            ],
        },
        {
            "name": "changePassword",
            "type": "complex",
            "multiValued": False,
            "description": """A complex type that specifies configuration options related to changing a password.""",
            "required": True,
            "returned": "default",
            "mutability": "readOnly",
            "subAttributes": [
                {
                    "name": "supported",
                    "type": "boolean",
                    "multiValued": False,
                    "description": """A Boolean value specifying whether or not the operation is supported.""",
                    "required": True,
                    "mutability": "readOnly",
                    "returned": "default",
                }
            ],
        },
        {
            "name": "sort",
            "type": "complex",
            "multiValued": False,
            "description": """A complex type that specifies sort result options.""",
            "required": True,
            "returned": "default",
            "mutability": "readOnly",
            "subAttributes": [
                {
                    "name": "supported",
                    "type": "boolean",
                    "multiValued": False,
                    "description": """A Boolean value specifying whether or not the operation is supported.""",
                    "required": True,
                    "mutability": "readOnly",
                    "returned": "default",
                }
            ],
        },
        {
            "name": "authenticationSchemes",
            "type": "complex",
            "multiValued": True,
            "description": """A complex type that specifies supported authentication scheme properties.""",
            "required": True,
            "returned": "default",
            "mutability": "readOnly",
            "subAttributes": [
                {
                    "name": "name",
                    "type": "string",
                    "multiValued": False,
                    "description": """The common authentication scheme name, e.g., HTTP Basic.""",
                    "required": True,
                    "caseExact": False,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                },
                {
                    "name": "description",
                    "type": "string",
                    "multiValued": False,
                    "description": """A description of the authentication scheme.""",
                    "required": True,
                    "caseExact": False,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                },
                {
                    "name": "specUri",
                    "type": "reference",
                    "referenceTypes": ["external"],
                    "multiValued": False,
                    "description": """An HTTP-addressable URL pointing to the authentication scheme's specification.""",
                    "required": False,
                    "caseExact": False,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                },
                {
                    "name": "documentationUri",
                    "type": "reference",
                    "referenceTypes": ["external"],
                    "multiValued": False,
                    "description": """An HTTP-addressable URL pointing to the authentication scheme's usage documentation.""",
                    "required": False,
                    "caseExact": False,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                },
            ],
        },
    ],
}

SCHEMA_RESOURCE_TYPE = {
    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:Schema"],
    "id": "urn:ietf:params:scim:schemas:core:2.0:ResourceType",
    "meta": {
        "resourceType": "Schema",
        "location": "/Schemas/urn:ietf:params:scim:schemas:core:2.0:ResourceType",
    },
    "name": "ResourceType",
    "description": """Specifies the schema that describes a SCIM resource type""",
    "attributes": [
        {
            "name": "id",
            "type": "string",
            "multiValued": False,
            "description": """The resource type's server unique id. May be the same as the 'name' attribute.""",
            "required": False,
            "caseExact": False,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none",
        },
        {
            "name": "name",
            "type": "string",
            "multiValued": False,
            "description": """The resource type name.  When applicable, service providers MUST specify the name, e.g., 'User'.""",
            "required": True,
            "caseExact": False,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none",
        },
        {
            "name": "description",
            "type": "string",
            "multiValued": False,
            "description": """The resource type's human-readable description.  When applicable, service providers MUST specify the description.""",
            "required": False,
            "caseExact": False,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none",
        },
        {
            "name": "endpoint",
            "type": "reference",
            "referenceTypes": ["uri"],
            "multiValued": False,
            "description": """The resource type's HTTP-addressable endpoint relative to the Base URL, e.g., '/Users'.""",
            "required": True,
            "caseExact": False,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none",
        },
        {
            "name": "schema",
            "type": "reference",
            "referenceTypes": ["uri"],
            "multiValued": False,
            "description": """The resource type's primary/base schema URI.""",
            "required": True,
            "caseExact": True,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none",
        },
        {
            "name": "schemaExtensions",
            "type": "complex",
            "multiValued": False,
            "description": """A list of URIs of the resource type's schema extensions.""",
            "required": True,
            "mutability": "readOnly",
            "returned": "default",
            "subAttributes": [
                {
                    "name": "schema",
                    "type": "reference",
                    "referenceTypes": ["uri"],
                    "multiValued": False,
                    "description": "The URI of a schema extension.",
                    "required": True,
                    "caseExact": True,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                },
                {
                    "name": "required",
                    "type": "boolean",
                    "multiValued": False,
                    "description": """A Boolean value that specifies whether or not the schema extension is required for the resource type.  If True, a resource of this type MUST include this schema extension and also include any attributes declared as required in this schema extension. If False, a resource of this type MAY omit this schema extension.""",
                    "required": True,
                    "mutability": "readOnly",
                    "returned": "default",
                },
            ],
        },
    ],
}

SCHEMA_SCHEMA = {
    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:Schema"],
    "id": "urn:ietf:params:scim:schemas:core:2.0:Schema",
    "meta": {
        "resourceType": "Schema",
        "location": "/Schemas/urn:ietf:params:scim:schemas:core:2.0:Schema",
    },
    "name": "Schema",
    "description": """Specifies the schema that describes a SCIM schema""",
    "attributes": [
        {
            "name": "id",
            "type": "string",
            "multiValued": False,
            "description": """The unique URI of the schema. When applicable, service providers MUST specify the URI.""",
            "required": True,
            "caseExact": False,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none",
        },
        {
            "name": "name",
            "type": "string",
            "multiValued": False,
            "description": """The schema's human-readable name.  When applicable, service providers MUST specify the name, e.g., 'User'.""",
            "required": True,
            "caseExact": False,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none",
        },
        {
            "name": "description",
            "type": "string",
            "multiValued": False,
            "description": """The schema's human-readable name.  When applicable, service providers MUST specify the name, e.g., 'User'.""",
            "required": False,
            "caseExact": False,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none",
        },
        {
            "name": "attributes",
            "type": "complex",
            "multiValued": True,
            "description": """A complex attribute that includes the attributes of a schema.""",
            "required": True,
            "mutability": "readOnly",
            "returned": "default",
            "subAttributes": [
                {
                    "name": "name",
                    "type": "string",
                    "multiValued": False,
                    "description": "The attribute's name.",
                    "required": True,
                    "caseExact": True,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                },
                {
                    "name": "type",
                    "type": "string",
                    "multiValued": False,
                    "description": """The attribute's data type. Valid values include 'string', 'complex', 'boolean', 'decimal', 'integer', 'dateTime', 'reference'.""",
                    "required": True,
                    "canonicalValues": [
                        "string",
                        "complex",
                        "boolean",
                        "decimal",
                        "integer",
                        "dateTime",
                        "reference",
                    ],
                    "caseExact": False,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                },
                {
                    "name": "multiValued",
                    "type": "boolean",
                    "multiValued": False,
                    "description": """A Boolean value indicating an attribute's plurality.""",
                    "required": True,
                    "mutability": "readOnly",
                    "returned": "default",
                },
                {
                    "name": "description",
                    "type": "string",
                    "multiValued": False,
                    "description": """A human-readable description of the attribute.""",
                    "required": False,
                    "caseExact": True,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                },
                {
                    "name": "required",
                    "type": "boolean",
                    "multiValued": False,
                    "description": """A boolean value indicating whether or not the attribute is required.""",
                    "required": False,
                    "mutability": "readOnly",
                    "returned": "default",
                },
                {
                    "name": "canonicalValues",
                    "type": "string",
                    "multiValued": True,
                    "description": """A collection of canonical values.  When applicable, service providers MUST specify the canonical types, e.g., 'work', 'home'.""",
                    "required": False,
                    "caseExact": True,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                },
                {
                    "name": "caseExact",
                    "type": "boolean",
                    "multiValued": False,
                    "description": """A Boolean value indicating whether or not a string attribute is case sensitive.""",
                    "required": False,
                    "mutability": "readOnly",
                    "returned": "default",
                },
                {
                    "name": "mutability",
                    "type": "string",
                    "multiValued": False,
                    "description": """Indicates whether or not an attribute is modifiable.""",
                    "required": False,
                    "caseExact": True,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                    "canonicalValues": [
                        "readOnly",
                        "readWrite",
                        "immutable",
                        "writeOnly",
                    ],
                },
                {
                    "name": "returned",
                    "type": "string",
                    "multiValued": False,
                    "description": """Indicates when an attribute is returned in a response (e.g., to a query).""",
                    "required": False,
                    "caseExact": True,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                    "canonicalValues": [
                        "always",
                        "never",
                        "default",
                        "request",
                    ],
                },
                {
                    "name": "uniqueness",
                    "type": "string",
                    "multiValued": False,
                    "description": "Indicates how unique a value must be.",
                    "required": False,
                    "caseExact": True,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                    "canonicalValues": ["none", "server", "global"],
                },
                {
                    "name": "referenceTypes",
                    "type": "string",
                    "multiValued": True,
                    "description": """Used only with an attribute of type 'reference'.  Specifies a SCIM resourceType that a reference attribute MAY refer to, e.g., 'User'.""",
                    "required": False,
                    "caseExact": True,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                },
                {
                    "name": "subAttributes",
                    "type": "complex",
                    "multiValued": True,
                    "description": """Used to define the sub-attributes of a complex attribute.""",
                    "required": False,
                    "mutability": "readOnly",
                    "returned": "default",
                    "subAttributes": [
                        {
                            "name": "name",
                            "type": "string",
                            "multiValued": False,
                            "description": "The attribute's name.",
                            "required": True,
                            "caseExact": True,
                            "mutability": "readOnly",
                            "returned": "default",
                            "uniqueness": "none",
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "multiValued": False,
                            "description": """The attribute's data type. Valid values include 'string', 'complex', 'boolean', 'decimal', 'integer', 'dateTime', 'reference'.""",
                            "required": True,
                            "caseExact": False,
                            "mutability": "readOnly",
                            "returned": "default",
                            "uniqueness": "none",
                            "canonicalValues": [
                                "string",
                                "complex",
                                "boolean",
                                "decimal",
                                "integer",
                                "dateTime",
                                "reference",
                            ],
                        },
                        {
                            "name": "multiValued",
                            "type": "boolean",
                            "multiValued": False,
                            "description": """A Boolean value indicating an attribute's plurality.""",
                            "required": True,
                            "mutability": "readOnly",
                            "returned": "default",
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "multiValued": False,
                            "description": """A human-readable description of the attribute.""",
                            "required": False,
                            "caseExact": True,
                            "mutability": "readOnly",
                            "returned": "default",
                            "uniqueness": "none",
                        },
                        {
                            "name": "required",
                            "type": "boolean",
                            "multiValued": False,
                            "description": """A boolean value indicating whether or not the attribute is required.""",
                            "required": False,
                            "mutability": "readOnly",
                            "returned": "default",
                        },
                        {
                            "name": "canonicalValues",
                            "type": "string",
                            "multiValued": True,
                            "description": """A collection of canonical values.  When applicable, service providers MUST specify the canonical types, e.g., 'work', 'home'.""",
                            "required": False,
                            "caseExact": True,
                            "mutability": "readOnly",
                            "returned": "default",
                            "uniqueness": "none",
                        },
                        {
                            "name": "caseExact",
                            "type": "boolean",
                            "multiValued": False,
                            "description": """A Boolean value indicating whether or not a string attribute is case sensitive.""",
                            "required": False,
                            "mutability": "readOnly",
                            "returned": "default",
                        },
                        {
                            "name": "mutability",
                            "type": "string",
                            "multiValued": False,
                            "description": """Indicates whether or not an attribute is modifiable.""",
                            "required": False,
                            "caseExact": True,
                            "mutability": "readOnly",
                            "returned": "default",
                            "uniqueness": "none",
                            "canonicalValues": [
                                "readOnly",
                                "readWrite",
                                "immutable",
                                "writeOnly",
                            ],
                        },
                        {
                            "name": "returned",
                            "type": "string",
                            "multiValued": False,
                            "description": """Indicates when an attribute is returned in a response (e.g., to a query).""",
                            "required": False,
                            "caseExact": True,
                            "mutability": "readOnly",
                            "returned": "default",
                            "uniqueness": "none",
                            "canonicalValues": [
                                "always",
                                "never",
                                "default",
                                "request",
                            ],
                        },
                        {
                            "name": "uniqueness",
                            "type": "string",
                            "multiValued": False,
                            "description": "Indicates how unique a value must be.",
                            "required": False,
                            "caseExact": True,
                            "mutability": "readOnly",
                            "returned": "default",
                            "uniqueness": "none",
                            "canonicalValues": ["none", "server", "global"],
                        },
                        {
                            "name": "referenceTypes",
                            "type": "string",
                            "multiValued": False,
                            "description": """Used only with an attribute of type 'reference'.  Specifies a SCIM resourceType that a reference attribute MAY refer to, e.g., 'User'.""",
                            "required": False,
                            "caseExact": True,
                            "mutability": "readOnly",
                            "returned": "default",
                            "uniqueness": "none",
                        },
                    ],
                },
            ],
        },
    ],
}

SCHEMA_USER = {
    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:Schema"],
    "id": "urn:ietf:params:scim:schemas:core:2.0:User",
    "meta": {
        "resourceType": "Schema",
        "location": "/Schemas/urn:ietf:params:scim:schemas:core:2.0:User",
    },
    "name": "User",
    "description": "User Account",
    "attributes": [
        {
            "name": "userName",
            "type": "string",
            "multiValued": False,
            "description": """Unique identifier for the User, typically used by the user to directly authenticate to the service provider. Each User MUST include a non-empty userName value.  This identifier MUST be unique across the service provider's entire set of Users. REQUIRED.""",
            "required": True,
            "caseExact": False,
            "mutability": "readWrite",
            "returned": "default",
            "uniqueness": "server",
        },
        {
            "name": "displayName",
            "type": "string",
            "multiValued": False,
            "description": """The name of the User, suitable for display to end-users.  The name SHOULD be the full name of the User being described, if known.""",
            "required": False,
            "caseExact": False,
            "mutability": "readWrite",
            "returned": "default",
            "uniqueness": "none",
        },
        {
            "name": "active",
            "type": "boolean",
            "multiValued": False,
            "description": """A Boolean value indicating the User's administrative status.""",
            "required": False,
            "mutability": "readWrite",
            "returned": "default",
        },
        {
            "name": "password",
            "type": "string",
            "multiValued": False,
            "description": """The User's cleartext password.  This attribute is intended to be used as a means to specify an initial password when creating a new User or to reset an existing User's password.""",
            "required": False,
            "caseExact": False,
            "mutability": "writeOnly",
            "returned": "never",
            "uniqueness": "none",
        },
        {
            "name": "emails",
            "type": "complex",
            "multiValued": True,
            "description": """Email addresses for the user.  The value SHOULD be canonicalized by the service provider, e.g., 'bjensen@example.com' instead of 'bjensen@EXAMPLE.COM'. Canonical type values of 'work', 'home', and 'other'.""",
            "required": False,
            "subAttributes": [
                {
                    "name": "value",
                    "type": "string",
                    "multiValued": False,
                    "description": """Email addresses for the user.  The value SHOULD be canonicalized by the service provider, e.g., 'bjensen@example.com' instead of 'bjensen@EXAMPLE.COM'. Canonical type values of 'work', 'home', and 'other'.""",
                    "required": False,
                    "caseExact": False,
                    "mutability": "readWrite",
                    "returned": "default",
                    "uniqueness": "none",
                },
            ],
            "mutability": "readWrite",
            "returned": "default",
            "uniqueness": "none",
        },
        {
            "name": "phoneNumbers",
            "type": "complex",
            "multiValued": True,
            "description": """Phone numbers for the User.  The value SHOULD be canonicalized by the service provider according to the format specified in RFC 3966, e.g., 'tel:+1-201-555-0123'. Canonical type values of 'work', 'home', 'mobile', 'fax', 'pager', and 'other'.""",
            "required": False,
            "subAttributes": [
                {
                    "name": "value",
                    "type": "string",
                    "multiValued": False,
                    "description": "Phone number of the User.",
                    "required": False,
                    "caseExact": False,
                    "mutability": "readWrite",
                    "returned": "default",
                    "uniqueness": "none",
                },
            ],
            "mutability": "readWrite",
            "returned": "default",
        },
        {
            "name": "photos",
            "type": "complex",
            "multiValued": True,
            "description": "URLs of photos of the User.",
            "required": False,
            "subAttributes": [
                {
                    "name": "value",
                    "type": "reference",
                    "referenceTypes": ["external"],
                    "multiValued": False,
                    "description": "URL of a photo of the User.",
                    "required": False,
                    "caseExact": False,
                    "mutability": "readWrite",
                    "returned": "default",
                    "uniqueness": "none",
                },
            ],
            "mutability": "readWrite",
            "returned": "default",
        },
    ],
}

RESOURCE_TYPE_USER = {
    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"],
    "meta": {
        "location": "/ResourceTypes/User",
        "resourceType": "ResourceType",
    },
    "id": "User",
    "name": "User",
    "endpoint": "/Users",
    "description": "User Account",
    "schema": "urn:ietf:params:scim:schemas:core:2.0:User",
    "schemaExtensions": [],
}
